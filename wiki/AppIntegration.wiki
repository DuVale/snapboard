#summary Overview of steps to integrate SNAPboard into an existing Django project

For comments, questions and concerns, please see the Google [http://groups.google.com/group/snapboard-discuss Group].

So you've got some Django project up and running - well, adding SNAPboard is a snap!  You just need to make a few symbolic links and make some minor edits to the `urls.py` and `settings.py` project files.

= Recommended Setup =

Check out a copy of SNAPboard and make a symbolic link.
{{{
$ svn checkout http://snapboard.googlecode.com/svn/trunk/ snapboard_trunk
$ ln -s `pwd`/snapboard_trunk/snapboard /path/to/django/exampleproject
}}}

Optionally, if you want the snapboard account registration application, you can add another symbolic link:
{{{
$ ln -s `pwd`/snapboard_trunk/sbreg /path/to/django/exampleproject
}}}

== urls.py ==
Edit your project urls (project/url.py):
{{{
 (r'^snapboard/', include('exampleproject.snapboard.urls')),
}}}

== settings.py ==
Modify `MIDDLEWARE_CLASSES` to include snapboard middleware:
{{{
MIDDLEWARE_CLASSES = (
    ...
    # SNAPboard middleware
    'exampleproject.snapboard.middleware.threadlocals.ThreadLocals',
)
}}}

To make sure that the two SNAP variables get processed correctly, you need to add the following line to your TEMPLATE_CONTEXT_PROCESSORS variable:
{{{
TEMPLATE_CONTEXT_PROCESSORS = (
    ...
    # SNAPboard default context
    'exampleproject.snapboard.views.snapboard_default_context',
}}}
There is a gotcha here; the default template context processors are `auth`, `debug`, `i18n`, and `request`.  When you set `TEMPLATE_CONTEXT_PROCESSORS` in your project settings file, the defaults are no longer applied.  At a _minimum_, you need the following for snapboard:

{{{
TEMPLATE_CONTEXT_PROCESSORS = (
    "django.core.context_processors.auth",
    "django.core.context_processors.request",

    # SNAPboard processors
    "examplesite.snapboard.views.snapboard_default_context",
)
}}}
For more information, see the settings [http://www.djangoproject.com/documentation/settings/#template-context-processors documentation].

== Voila! ==

At this point, you can sync up and deploy.
{{{
$ cd /path/to/exampleproject; python manage.py syncdb
}}}


= Extra Customization =

== URLs ==
You don't have to use `/snapboard` as your base URL.  A good alternative is:
{{{
    # forums
    (r'^forum/', include('webapps.snapboard.urls')),
    (r'^forums/', include('webapps.snapboard.urls')),
}}}

But you need to set some additional SNAPboard variables in `settings.py`, e.g. for the urls above, you would need to set `SNAP_PREFIX`
{{{
SNAP_PREFIX = '/forums'    
}}}

== Media Files ==
SNAPboard will accept an additional setting to specify a custom media location.  The default is:
{{{
SNAP_MEDIA_PREFIX = MEDIA_URL + '/media'
}}}
If that's okay, you don't need to do anything.  If you've moved the media files somewhere special, just set the above variable.

== Templates ==
*This section is incomplete*
SNAPboard templates are designed to be as flexible as possible.  It is very easy to override them.  We've tried to use the same template block variable names as the admin templates, so you should be comfortable doing small customizations.  Larger changes like layout changes should also be relatively straightforward.



